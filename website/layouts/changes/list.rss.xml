<!-- Copy of Docsy's layout, but
	 - without a special case for first-level lists that would only include regular pages
	 - using the actual section title, not title-casing the section name
	 - not including a featured image
	 - not including a zero pubDate
	 - not incorrectly using safeHTML in dates
	 - formatting the template in a readable way; we don't care about some empty lines in the XML
-->

<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>{{ .Site.Title }} â€“ {{ .Title }}</title>
    <link>{{ .Permalink }}</link>
    <description>Recent content {{ if ne  .Title  .Site.Title }}{{ with .Title }}in {{.}} {{ end }}{{ end }}on {{ .Site.Title }}</description>
    <generator>Hugo -- gohugo.io</generator>
	{{ with .Site.LanguageCode }}
      <language>{{.}}</language>
	{{end}}
	{{ with .Site.Author.email }}
      <managingEditor>{{.}}{{ with $.Site.Author.name }} ({{.}}){{end}}</managingEditor>
	{{end}}
	{{ with .Site.Author.email }}
      <webMaster>{{.}}{{ with $.Site.Author.name }} ({{.}}){{end}}</webMaster>
	{{end}}
	{{ with .Site.Copyright }}
      <copyright>{{.}}</copyright>
	{{end}}
	{{ if not .Date.IsZero }}
      <lastBuildDate>{{ .Date.Format "Mon, 02 Jan 2006 15:04:05 -0700" | safeHTML }}</lastBuildDate>
	{{ end }}
    {{ with .OutputFormats.Get "RSS" }}
      {{ printf "<atom:link href=%q rel=\"self\" type=%q />" .Permalink .MediaType | safeHTML }}
    {{ end }}

    {{ if not $.Section }}
      {{ $sections := .Site.Params.rss_sections | default (slice "blog") }}
      {{ .Scratch.Set "rss_pages" (first 50 (where $.Site.RegularPages "Type" "in" $sections )) }}
    {{ else }}
      {{ .Scratch.Set "rss_pages" (first 50 $.Pages) }}
    {{ end }}
    {{ range (.Scratch.Get "rss_pages")  }}
    <item>
      <title>{{ $.Page.Title }}: {{ .Title }}</title>
      <link>{{ .Permalink }}</link>
	  {{ if not .Date.IsZero }}
	    <pubDate>{{ .Date.Format "Mon, 02 Jan 2006 15:04:05 -0700" }}</pubDate>
	  {{ end }}
      {{ with .Site.Author.email }}
	    <author>{{.}}{{ with $.Site.Author.name }} ({{.}}){{end}}</author>
	  {{end}}
      <guid>{{ .Permalink }}</guid>
      <description>
		{{ .Content | html }}
      </description>
    </item>
    {{ end }}
  </channel>
</rss>
